buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects {
    group 'com.implicitly'
    version '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }

    configurations {
        compile.exclude module: "spring-boot-starter-tomcat"
    }

    ext {
        springCloudVersion = 'Greenwich.RC2'
    }

    dependencies {
        /* spring modules */
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-undertow'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
        implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-discovery'
        implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'

        /* persistence */
        compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1212'
        compile group: 'com.zaxxer', name: 'HikariCP', version: '3.3.1'
        compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.2.Final'
        compile group: 'org.hibernate', name: 'hibernate-java8', version: '5.3.2.Final'

        /* REST API documentation modules */
        compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
        compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'

        /* utility modules */
        compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.6'
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.6'
        annotationProcessor group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
        annotationProcessor group: 'org.hibernate', name: 'hibernate-jpamodelgen', version: '5.3.9.Final'
        compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.2.1'
        compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
        compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
        compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
        compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '5.1'
        compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.8.6'
        compile group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.1.3'

        /* test */
        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
        testCompile group: 'org.mockito', name: 'mockito-core', version: '2.28.2'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    tasks.withType(JavaCompile) {
        options.annotationProcessorGeneratedSourcesDirectory = file("src/generated/java")
    }

    compileJava.options.compilerArgs += [
    ]

    sourceSets {
        generated {
            java {
                srcDirs = ['src/generated/java']
            }
        }
    }

}

project(':ap_boot_starter') {

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }

}

project(':ap_auth') {
    dependencies {
        implementation project(':ap_boot_starter')
    }
}

project(':ap_delivery_point') {
    dependencies {
        implementation project(':ap_boot_starter')
    }

}

project(':ap_customer') {
    dependencies {
        implementation project(':ap_boot_starter')
    }
}

project(':ap_order') {
    dependencies {
        implementation project(':ap_boot_starter')
    }
}

project(':ap_notification') {
    dependencies {
        implementation project(':ap_boot_starter')
    }
}

project(':ap_gateway') {
    configurations {
        compile.exclude module: "spring-boot-starter-security"
        compile.exclude module: "spring-boot-starter-data-jpa"
        compile.exclude module: "spring-boot-starter-data-redis"
    }
    dependencies {
        implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-zuul'
    }
}
